{"name": "test_enterDataInForm", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <AppiumFramwork.pages.ContactUsFormPage.ContactForm object at 0x000001E57F0ED070>, locatorValue = 'SUBMIT', locatorType = 'text'\n\n    def getElement(self, locatorValue, locatorType=\"id\"):\n        element = None\n        try:\n            locatorType = locatorType.lower()\n>           element = self.waitForElement(locatorValue, locatorType)\n\n..\\base\\BasePage.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <AppiumFramwork.pages.ContactUsFormPage.ContactForm object at 0x000001E57F0ED070>, locatorvalue = 'SUBMIT', locatorType = 'text'\n\n    def waitForElement(self, locatorvalue, locatorType):\n        locatorType = locatorType.lower()\n        element = None\n        wait = WebDriverWait(self.driver, 25, poll_frequency=1,\n                             ignored_exceptions=[ElementNotVisibleException, ElementNotSelectableException,\n                                                 NoSuchElementException])\n        if locatorType == \"id\":\n            element = wait.until(lambda x: x.find_element(AppiumBy.ID, locatorvalue))\n            return element\n        elif locatorType == \"class\":\n            element = wait.until(lambda x: x.find_element(AppiumBy.CLASS_NAME, locatorvalue))\n            return element\n        elif locatorType == \"des\":\n            element = wait.until(\n                lambda x: x.find_element(AppiumBy.ANDROID_UIAUTOMATOR,\n                                         'UiSelector().description(\"%s\")' % (locatorvalue)))\n            return element\n        elif locatorType == \"index\":\n            element = wait.until(\n                lambda x: x.find_element(AppiumBy.ANDROID_UIAUTOMATOR, \"UiSelector().index(%d)\" % int(locatorvalue)))\n            return element\n        elif locatorType == \"text\":\n>           element = wait.until(lambda x: x.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'text(\"%s\")' % locatorvalue))\n\n..\\base\\BasePage.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7a6903f3-34a0-4eb0-96c4-553e8a81c2b0\")>\nmethod = <function BasePage.waitForElement.<locals>.<lambda> at 0x000001E57F0CC040>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except InvalidSelectorException as e:\n                raise e\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n>           time.sleep(self._poll)\nE           KeyboardInterrupt\n\n..\\..\\..\\..\\AppData\\Roaming\\Python\\Python39\\site-packages\\selenium\\webdriver\\support\\wait.py:86: KeyboardInterrupt\n\nDuring handling of the above exception, another exception occurred:\n\nself = <AppiumFramwork.pages.ContactUsFormPage.ContactForm object at 0x000001E57F0ED070>, locatorValue = 'SUBMIT', locatorType = 'text'\n\n    def clickElement(self, locatorValue, locatorType=\"id\"):\n        element = None\n        try:\n            locatorType = locatorType.lower()\n>           element = self.getElement(locatorValue, locatorType)\n\n..\\base\\BasePage.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <AppiumFramwork.pages.ContactUsFormPage.ContactForm object at 0x000001E57F0ED070>, locatorValue = 'SUBMIT', locatorType = 'text'\n\n    def getElement(self, locatorValue, locatorType=\"id\"):\n        element = None\n        try:\n            locatorType = locatorType.lower()\n            element = self.waitForElement(locatorValue, locatorType)\n            self.log.info(\"Element found with LocatorType: \" + locatorType + \" with the locatorValue :\" + locatorValue)\n        except:\n            self.log.info(\n                \"Element not found with LocatorType: \" + locatorType + \" and with the locatorValue :\" + locatorValue)\n            self.takeScreenshot(locatorType)\n>           assert False\nE           AssertionError\n\n..\\base\\BasePage.py:59: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <AppiumFramwork.tests.ContectFormTest.ContactFormTest testMethod=test_enterDataInForm>\n\n    @pytest.mark.run(order=2)\n    def test_enterDataInForm(self):\n        self. cf.enterName()\n        self.cf.enterEmail()\n        self.cf.enterAddress()\n        self.cf.enterMNumber()\n>       self.cf.clickSubmitButton()\n\nContectFormTest.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\pages\\ContactUsFormPage.py:45: in clickSubmitButton\n    self.clickElement(self._submitButton,\"text\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <AppiumFramwork.pages.ContactUsFormPage.ContactForm object at 0x000001E57F0ED070>, locatorValue = 'SUBMIT', locatorType = 'text'\n\n    def clickElement(self, locatorValue, locatorType=\"id\"):\n        element = None\n        try:\n            locatorType = locatorType.lower()\n            element = self.getElement(locatorValue, locatorType)\n            element.click()\n            self.log.info(\n                \"Clicked on Element with LocatorType: \" + locatorType + \" and with the locatorValue :\" + locatorValue)\n        except:\n            self.log.info(\n                \"Unable to click on Element with LocatorType: \" + locatorType + \" and with the locatorValue :\" + locatorValue)\n            self.takeScreenshot(locatorType)\n>           assert False\nE           AssertionError\n\n..\\base\\BasePage.py:74: AssertionError"}, "steps": [{"name": "Click Enter Name", "status": "passed", "start": 1653572214387, "stop": 1653572214387}, {"name": "Click Enter Email ID", "status": "passed", "start": 1653572215847, "stop": 1653572215847}, {"name": "Click Enter Address", "status": "passed", "start": 1653572241890, "stop": 1653572241890}, {"name": "Click enter Number", "status": "passed", "start": 1653572242498, "stop": 1653572242498}], "attachments": [{"name": "text", "source": "bc9e8162-62bf-4b9a-a552-962909719b75-attachment.png", "type": "image/png"}, {"name": "text", "source": "ee61cba4-63fd-4bce-a70d-e16307f72b18-attachment.png", "type": "image/png"}, {"name": "text", "source": "15815089-c5f8-43e8-9ce0-08473f889f78-attachment.png", "type": "image/png"}, {"name": "text", "source": "216cd659-7518-46c9-8787-2b63c54b8349-attachment.png", "type": "image/png"}, {"name": "text", "source": "51299054-1a67-40c1-b7c8-615f311e5ddf-attachment.png", "type": "image/png"}, {"name": "text", "source": "80ccb5d4-3154-4e14-807a-0c41d52cbedf-attachment.png", "type": "image/png"}, {"name": "index", "source": "3608527a-f1c8-482b-ace1-bacc4ebed229-attachment.png", "type": "image/png"}, {"name": "text", "source": "fc793d77-fa6e-4ae5-a80a-3fe38f3fce9b-attachment.png", "type": "image/png"}, {"name": "text", "source": "1e519639-4c26-4e21-9b97-8152bd55c8aa-attachment.png", "type": "image/png"}, {"name": "log", "source": "6863bf26-497d-4448-9b67-8b1bb43c3064-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "1baba20d-c294-43cb-9d27-a4a17595d1d8-attachment.txt", "type": "text/plain"}], "start": 1653572187220, "stop": 1653572250429, "uuid": "79bdb57d-9f37-415e-b7be-14c618f086fa", "historyId": "e52bdc27212ebfa017dda776df563de5", "testCaseId": "39a3f98e6d10b36122aedc8f3126c647", "fullName": "TestSuite.ContactFormTest#test_enterDataInForm", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('beforeClass', 'beforeMethod')"}, {"name": "tag", "value": "run(order=2)"}, {"name": "suite", "value": "TestSuite"}, {"name": "subSuite", "value": "ContactFormTest"}, {"name": "host", "value": "BTZVBK3"}, {"name": "thread", "value": "15080-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestSuite"}]}